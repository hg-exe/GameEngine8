using System.Collections;
using System.Collections.Generic;
using UnityEngine.AI;
using UnityEngine;

public class CompanionCube : MonoBehaviour
{
    //Defaults
    public enum Behaviours { Chasing, Patrolling, Waiting, Investigating};
    public Behaviours currentBehaviour;
    NavMeshAgent agent;

    //Chasing
    [SerializeField] Transform player;

    //Patrolling
    public List<Transform> patrolPoints;
    int currentPatrolPoint = -1;

    // Start is called before the first frame update
    void Start()
    {
        agent = GetComponent<NavMeshAgent>();
        InvokeRepeating("UpdateAI", 0.0f, 2.0f);
    }

    void UpdateAI()
    {
        switch (currentBehaviour)
        {
            case Behaviours.Chasing:
                agent.SetDestination(player.position);

                break;
            case Behaviours.Patrolling:
                if(CheckForLineOfSight() && IsplayerWithinRange(8.0f)){
                    currentBehaviour = Behaviours.Chasing;
                    return;
                }
                UpdatePatrol();
                break;
            case Behaviours.Waiting:
                break;
            case Behaviours.Investigating:
                break;
        }
    }

    void UpdatePatrol()
    {
        if(currentPatrolPoint < 0)
        {
            currentPatrolPoint = 0;
            agent.SetDestination(patrolPoints[0].position);
        }

        if(Vector3.Distance(transform.position, agent.destination) < 3.0f)
        {
            currentPatrolPoint++;
            if(currentPatrolPoint == patrolPoints.Count){
                currentPatrolPoint = 0;
            }
            agent.SetDestination(patrolPoints[currentPatrolPoint].position);
        }
        else
        {
            return;
        }
    }

    bool CheckForLineOfSight()
    {
        RaycastHit hit;
        Vector3 startPos = transform.position;
        Vector3 targetPlayerPosition = player.transform.position + new Vector3(0.0f, 5.0f, 0.0f);
        Vector3 direction = Vector3.Normalize(targetPlayerPosition - startPos);

        Ray ray = new Ray(startPos, direction);

        if (Physics.Raycast(ray, out hit))
        {
            if (hit.collider.gameObject != player)
            {
                print(hit.collider.name + "is in the way");
                return false;

            }
        }
        print("I can see player");
        return true;
    }

    bool IsplayerWithinRange(float range)
    {
        if(Vector3.Distance(player.transform.position, transform.position) < range)
        {
            return true;
        }
        return false;
    }
}



